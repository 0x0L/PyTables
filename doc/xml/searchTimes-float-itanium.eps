%!PS-Adobe-2.0 EPSF-2.0
%%Title: searchTime-float-itanium.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Sep 30 14:13:01 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
stroke
882 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
966 573 M
31 0 V
5965 0 R
-31 0 V
966 775 M
31 0 V
5965 0 R
-31 0 V
966 878 M
31 0 V
5965 0 R
-31 0 V
966 928 M
63 0 V
5933 0 R
-63 0 V
stroke
882 928 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
966 1080 M
31 0 V
5965 0 R
-31 0 V
966 1282 M
31 0 V
5965 0 R
-31 0 V
966 1386 M
31 0 V
5965 0 R
-31 0 V
966 1435 M
63 0 V
5933 0 R
-63 0 V
stroke
882 1435 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
966 1588 M
31 0 V
5965 0 R
-31 0 V
966 1790 M
31 0 V
5965 0 R
-31 0 V
966 1893 M
31 0 V
5965 0 R
-31 0 V
966 1943 M
63 0 V
5933 0 R
-63 0 V
stroke
882 1943 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
966 2095 M
31 0 V
5965 0 R
-31 0 V
966 2297 M
31 0 V
5965 0 R
-31 0 V
966 2401 M
31 0 V
5965 0 R
-31 0 V
966 2450 M
63 0 V
5933 0 R
-63 0 V
stroke
882 2450 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
966 2603 M
31 0 V
5965 0 R
-31 0 V
966 2805 M
31 0 V
5965 0 R
-31 0 V
966 2908 M
31 0 V
5965 0 R
-31 0 V
966 2958 M
63 0 V
5933 0 R
-63 0 V
stroke
882 2958 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
966 3110 M
31 0 V
5965 0 R
-31 0 V
966 3312 M
31 0 V
5965 0 R
-31 0 V
966 3416 M
31 0 V
5965 0 R
-31 0 V
966 3465 M
63 0 V
5933 0 R
-63 0 V
stroke
882 3465 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
966 3618 M
31 0 V
5965 0 R
-31 0 V
966 3820 M
31 0 V
5965 0 R
-31 0 V
966 3923 M
31 0 V
5965 0 R
-31 0 V
966 3973 M
63 0 V
5933 0 R
-63 0 V
stroke
882 3973 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
1.000 UL
LTb
966 4125 M
31 0 V
5965 0 R
-31 0 V
966 4327 M
31 0 V
5965 0 R
-31 0 V
966 4431 M
31 0 V
5965 0 R
-31 0 V
966 4480 M
63 0 V
5933 0 R
-63 0 V
stroke
882 4480 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MRshow
1.000 UL
LTb
966 420 M
0 63 V
0 3997 R
0 -63 V
stroke
966 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1267 420 M
0 31 V
0 4029 R
0 -31 V
1665 420 M
0 31 V
0 4029 R
0 -31 V
1868 420 M
0 31 V
0 4029 R
0 -31 V
1965 420 M
0 63 V
0 3997 R
0 -63 V
stroke
1965 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MCshow
1.000 UL
LTb
2266 420 M
0 31 V
0 4029 R
0 -31 V
2664 420 M
0 31 V
0 4029 R
0 -31 V
2868 420 M
0 31 V
0 4029 R
0 -31 V
2965 420 M
0 63 V
0 3997 R
0 -63 V
stroke
2965 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MCshow
1.000 UL
LTb
3265 420 M
0 31 V
0 4029 R
0 -31 V
3663 420 M
0 31 V
0 4029 R
0 -31 V
3867 420 M
0 31 V
0 4029 R
0 -31 V
3964 420 M
0 63 V
0 3997 R
0 -63 V
stroke
3964 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+06)]
] -46.7 MCshow
1.000 UL
LTb
4265 420 M
0 31 V
0 4029 R
0 -31 V
4663 420 M
0 31 V
0 4029 R
0 -31 V
4866 420 M
0 31 V
0 4029 R
0 -31 V
4963 420 M
0 63 V
0 3997 R
0 -63 V
stroke
4963 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+07)]
] -46.7 MCshow
1.000 UL
LTb
5264 420 M
0 31 V
0 4029 R
0 -31 V
5662 420 M
0 31 V
0 4029 R
0 -31 V
5866 420 M
0 31 V
0 4029 R
0 -31 V
5963 420 M
0 63 V
0 3997 R
0 -63 V
stroke
5963 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+08)]
] -46.7 MCshow
1.000 UL
LTb
6263 420 M
0 31 V
0 4029 R
0 -31 V
6661 420 M
0 31 V
0 4029 R
0 -31 V
6865 420 M
0 31 V
0 4029 R
0 -31 V
6962 420 M
0 63 V
0 3997 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+09)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
966 420 M
5996 0 V
0 4060 V
-5996 0 V
966 420 L
LTb
140 2450 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Time \(seconds\))]
] -46.7 MCshow
grestore
LTb
3964 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of rows)]
] -46.7 MCshow
LTb
3964 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Comparison between the different selection modes in PyTables )]
] -46.7 MCshow
3964 4690 M
[ [(Helvetica) 140.0 0.0 true true 0 ( \(condition applied over Float64 values\))]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Standard)]
] -46.7 MRshow
LT0
6395 4347 M
399 0 V
966 839 M
301 152 V
398 199 V
300 158 V
301 164 V
398 135 V
301 154 V
300 153 V
398 197 V
301 154 V
301 151 V
398 203 V
300 152 V
301 153 V
1397 710 V
301 152 V
966 839 Pls
1267 991 Pls
1665 1190 Pls
1965 1348 Pls
2266 1512 Pls
2664 1647 Pls
2965 1801 Pls
3265 1954 Pls
3663 2151 Pls
3964 2305 Pls
4265 2456 Pls
4663 2659 Pls
4963 2811 Pls
5264 2964 Pls
6661 3674 Pls
6962 3826 Pls
6594 4347 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4207 M
[ [(Helvetica) 140.0 0.0 true true 0 (In-kernel)]
] -46.7 MRshow
LT1
6395 4207 M
399 0 V
966 519 M
301 91 V
398 174 V
300 194 V
301 222 V
398 2 V
301 158 V
300 152 V
398 105 V
301 129 V
301 181 V
398 183 V
300 157 V
301 169 V
1397 715 V
301 155 V
966 519 Crs
1267 610 Crs
1665 784 Crs
1965 978 Crs
2266 1200 Crs
2664 1202 Crs
2965 1360 Crs
3265 1512 Crs
3663 1617 Crs
3964 1746 Crs
4265 1927 Crs
4663 2110 Crs
4963 2267 Crs
5264 2436 Crs
6661 3151 Crs
6962 3306 Crs
6594 4207 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4067 M
[ [(Helvetica) 140.0 0.0 true true 0 (Indexed)]
] -46.7 MRshow
LT2
6395 4067 M
399 0 V
966 429 M
301 132 V
398 73 V
300 149 V
301 178 V
2664 830 L
301 141 V
300 236 V
3663 868 L
301 -28 V
301 139 V
398 166 V
300 176 V
301 162 V
1397 680 V
301 118 V
966 429 Star
1267 561 Star
1665 634 Star
1965 783 Star
2266 961 Star
2664 830 Star
2965 971 Star
3265 1207 Star
3663 868 Star
3964 840 Star
4265 979 Star
4663 1145 Star
4963 1321 Star
5264 1483 Star
6661 2163 Star
6962 2281 Star
6594 4067 Star
1.000 UL
LTb
966 420 M
5996 0 V
0 4060 V
-5996 0 V
966 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
