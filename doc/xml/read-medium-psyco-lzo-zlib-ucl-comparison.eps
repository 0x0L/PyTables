%!PS-Adobe-2.0 EPSF-2.0
%%Title: read-medium-psyco-lzo-zlib-ucl-comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 28 12:08:45 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
( 0) Rshow
798 980 M
63 0 V
6101 0 R
-63 0 V
714 980 M
( 200) Rshow
798 1540 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 400) Rshow
798 2100 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 600) Rshow
798 2660 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 800) Rshow
798 3220 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1000) Rshow
798 3780 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1200) Rshow
798 4340 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1400) Rshow
798 420 M
0 63 V
0 4137 R
0 -63 V
798 280 M
( 1000) Cshow
1262 420 M
0 31 V
0 4169 R
0 -31 V
1875 420 M
0 31 V
0 4169 R
0 -31 V
2190 420 M
0 31 V
0 4169 R
0 -31 V
2339 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 10000) Cshow
2803 420 M
0 31 V
0 4169 R
0 -31 V
3416 420 M
0 31 V
0 4169 R
0 -31 V
3731 420 M
0 31 V
0 4169 R
0 -31 V
3880 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100000) Cshow
4344 420 M
0 31 V
0 4169 R
0 -31 V
4957 420 M
0 31 V
0 4169 R
0 -31 V
5272 420 M
0 31 V
0 4169 R
0 -31 V
5421 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
5885 420 M
0 31 V
0 4169 R
0 -31 V
6498 420 M
0 31 V
0 4169 R
0 -31 V
6813 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+07) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Krow/s\)) Cshow
grestore
3880 70 M
(Number of rows) Cshow
3880 4830 M
(Selecting with medium record size \(56 bytes\)) Cshow
1.000 UP
7.000 UL
LT0
6311 4487 M
(Psyco & No compression) Rshow
6395 4487 M
399 0 V
798 633 M
464 185 V
271 162 V
193 140 V
149 123 V
122 109 V
103 98 V
90 90 V
78 78 V
71 73 V
464 594 V
271 235 V
193 185 V
149 87 V
122 61 V
103 146 V
90 -34 V
78 135 V
71 -65 V
464 213 V
271 48 V
193 159 V
149 -25 V
122 53 V
103 -45 V
90 31 V
78 -75 V
71 72 V
5885 1688 L
271 566 V
6349 1134 L
149 39 V
122 109 V
103 -44 V
90 -118 V
78 -11 V
798 633 Pls
1262 818 Pls
1533 980 Pls
1726 1120 Pls
1875 1243 Pls
1997 1352 Pls
2100 1450 Pls
2190 1540 Pls
2268 1618 Pls
2339 1691 Pls
2803 2285 Pls
3074 2520 Pls
3267 2705 Pls
3416 2792 Pls
3538 2853 Pls
3641 2999 Pls
3731 2965 Pls
3809 3100 Pls
3880 3035 Pls
4344 3248 Pls
4615 3296 Pls
4808 3455 Pls
4957 3430 Pls
5079 3483 Pls
5182 3438 Pls
5272 3469 Pls
5350 3394 Pls
5421 3466 Pls
5885 1688 Pls
6156 2254 Pls
6349 1134 Pls
6498 1173 Pls
6620 1282 Pls
6723 1238 Pls
6813 1120 Pls
6891 1109 Pls
6594 4487 Pls
1.000 UP
7.000 UL
LT1
6311 4347 M
(Psyco & ZLIB) Rshow
6395 4347 M
399 0 V
798 605 M
464 165 V
271 115 V
193 95 V
149 76 V
122 64 V
103 53 V
90 76 V
78 39 V
71 34 V
464 218 V
271 95 V
193 28 V
149 90 V
122 31 V
103 -3 V
90 -20 V
78 42 V
71 -11 V
464 20 V
271 44 V
193 9 V
149 -3 V
122 3 V
103 -11 V
90 -6 V
78 31 V
71 -25 V
464 2 V
271 12 V
193 -37 V
149 9 V
122 0 V
103 -14 V
90 16 V
78 -5 V
798 605 Crs
1262 770 Crs
1533 885 Crs
1726 980 Crs
1875 1056 Crs
1997 1120 Crs
2100 1173 Crs
2190 1249 Crs
2268 1288 Crs
2339 1322 Crs
2803 1540 Crs
3074 1635 Crs
3267 1663 Crs
3416 1753 Crs
3538 1784 Crs
3641 1781 Crs
3731 1761 Crs
3809 1803 Crs
3880 1792 Crs
4344 1812 Crs
4615 1856 Crs
4808 1865 Crs
4957 1862 Crs
5079 1865 Crs
5182 1854 Crs
5272 1848 Crs
5350 1879 Crs
5421 1854 Crs
5885 1856 Crs
6156 1868 Crs
6349 1831 Crs
6498 1840 Crs
6620 1840 Crs
6723 1826 Crs
6813 1842 Crs
6891 1837 Crs
6594 4347 Crs
1.000 UP
7.000 UL
LT2
6311 4207 M
(Psyco & LZO) Rshow
6395 4207 M
399 0 V
798 633 M
464 159 V
271 188 V
193 140 V
149 123 V
122 59 V
103 98 V
90 84 V
78 81 V
71 70 V
464 591 V
271 294 V
193 -700 V
149 972 V
122 134 V
103 6 V
90 61 V
78 51 V
71 16 V
464 202 V
271 64 V
193 40 V
149 70 V
122 -23 V
103 -17 V
90 -11 V
78 -75 V
71 120 V
464 36 V
271 -36 V
193 -246 V
149 218 V
122 45 V
103 36 V
90 -311 V
78 359 V
798 633 Star
1262 792 Star
1533 980 Star
1726 1120 Star
1875 1243 Star
1997 1302 Star
2100 1400 Star
2190 1484 Star
2268 1565 Star
2339 1635 Star
2803 2226 Star
3074 2520 Star
3267 1820 Star
3416 2792 Star
3538 2926 Star
3641 2932 Star
3731 2993 Star
3809 3044 Star
3880 3060 Star
4344 3262 Star
4615 3326 Star
4808 3366 Star
4957 3436 Star
5079 3413 Star
5182 3396 Star
5272 3385 Star
5350 3310 Star
5421 3430 Star
5885 3466 Star
6156 3430 Star
6349 3184 Star
6498 3402 Star
6620 3447 Star
6723 3483 Star
6813 3172 Star
6891 3531 Star
6594 4207 Star
1.000 UP
7.000 UL
LT3
6311 4067 M
(Psyco & UCL) Rshow
6395 4067 M
399 0 V
798 619 M
464 173 V
271 121 V
193 95 V
149 112 V
122 62 V
103 53 V
90 81 V
78 36 V
71 31 V
464 308 V
271 151 V
193 51 V
149 81 V
122 59 V
103 33 V
90 12 V
78 22 V
71 -6 V
464 70 V
271 42 V
193 12 V
149 42 V
122 8 V
103 6 V
90 -54 V
78 -14 V
71 90 V
464 -36 V
271 0 V
193 -23 V
149 235 V
122 -159 V
103 -42 V
90 120 V
78 53 V
798 619 Box
1262 792 Box
1533 913 Box
1726 1008 Box
1875 1120 Box
1997 1182 Box
2100 1235 Box
2190 1316 Box
2268 1352 Box
2339 1383 Box
2803 1691 Box
3074 1842 Box
3267 1893 Box
3416 1974 Box
3538 2033 Box
3641 2066 Box
3731 2078 Box
3809 2100 Box
3880 2094 Box
4344 2164 Box
4615 2206 Box
4808 2218 Box
4957 2260 Box
5079 2268 Box
5182 2274 Box
5272 2220 Box
5350 2206 Box
5421 2296 Box
5885 2260 Box
6156 2260 Box
6349 2237 Box
6498 2472 Box
6620 2313 Box
6723 2271 Box
6813 2391 Box
6891 2444 Box
6594 4067 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
