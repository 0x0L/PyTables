%!PS-Adobe-2.0 EPSF-2.0
%%Title: read-small-psyco-lzo-comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Fri Jun 13 19:06:26 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
( 0) Rshow
798 1120 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 200) Rshow
798 1820 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 400) Rshow
798 2520 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 600) Rshow
798 3220 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 800) Rshow
798 3920 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1000) Rshow
798 4620 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1200) Rshow
798 420 M
0 63 V
0 4137 R
0 -63 V
798 280 M
( 1000) Cshow
1262 420 M
0 31 V
0 4169 R
0 -31 V
1875 420 M
0 31 V
0 4169 R
0 -31 V
2190 420 M
0 31 V
0 4169 R
0 -31 V
2339 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 10000) Cshow
2803 420 M
0 31 V
0 4169 R
0 -31 V
3416 420 M
0 31 V
0 4169 R
0 -31 V
3731 420 M
0 31 V
0 4169 R
0 -31 V
3880 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100000) Cshow
4344 420 M
0 31 V
0 4169 R
0 -31 V
4957 420 M
0 31 V
0 4169 R
0 -31 V
5272 420 M
0 31 V
0 4169 R
0 -31 V
5421 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
5885 420 M
0 31 V
0 4169 R
0 -31 V
6498 420 M
0 31 V
0 4169 R
0 -31 V
6813 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+07) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Krow/s\)) Cshow
grestore
3880 70 M
(Number of rows) Cshow
3880 4830 M
(Selecting with small record size \(16 bytes\)) Cshow
1.000 UP
7.000 UL
LT1
6311 4487 M
(Psyco & compression \(LZO\)) Rshow
6395 4487 M
399 0 V
798 858 M
464 339 V
271 273 V
193 221 V
149 73 V
122 154 V
103 133 V
90 119 V
78 0 V
71 91 R
464 417 V
271 126 V
193 161 V
149 66 V
122 81 V
103 91 V
90 -11 V
78 -80 V
71 108 R
464 91 V
271 7 V
193 -31 V
149 -116 V
122 175 V
103 -35 V
90 158 V
78 -28 V
71 -56 R
464 49 V
271 31 V
193 -38 V
149 -196 V
122 7 V
103 140 V
90 84 V
78 -28 V
798 858 Crs
1262 1197 Crs
1533 1470 Crs
1726 1691 Crs
1875 1764 Crs
1997 1918 Crs
2100 2051 Crs
2190 2170 Crs
2268 2170 Crs
2339 2261 Crs
2803 2678 Crs
3074 2804 Crs
3267 2965 Crs
3416 3031 Crs
3538 3112 Crs
3641 3203 Crs
3731 3192 Crs
3809 3112 Crs
3880 3220 Crs
4344 3311 Crs
4615 3318 Crs
4808 3287 Crs
4957 3171 Crs
5079 3346 Crs
5182 3311 Crs
5272 3469 Crs
5350 3441 Crs
5421 3385 Crs
5885 3434 Crs
6156 3465 Crs
6349 3427 Crs
6498 3231 Crs
6620 3238 Crs
6723 3378 Crs
6813 3462 Crs
6891 3434 Crs
6594 4487 Crs
1.000 UP
7.000 UL
LT2
6311 4347 M
(Psyco & no compresion) Rshow
6395 4347 M
399 0 V
798 917 M
464 280 V
271 273 V
193 221 V
149 73 V
122 270 V
103 17 V
90 119 V
78 102 V
71 -11 V
464 417 V
271 241 V
193 91 V
149 60 V
122 -319 V
103 452 V
90 45 V
78 -115 V
71 154 V
464 -67 V
271 46 V
193 28 V
149 112 V
122 -35 V
103 56 V
90 -105 V
78 38 V
71 -227 V
5885 1229 L
271 -130 V
193 399 V
149 -38 V
122 -168 V
103 147 V
90 -207 V
78 119 V
798 917 Star
1262 1197 Star
1533 1470 Star
1726 1691 Star
1875 1764 Star
1997 2034 Star
2100 2051 Star
2190 2170 Star
2268 2272 Star
2339 2261 Star
2803 2678 Star
3074 2919 Star
3267 3010 Star
3416 3070 Star
3538 2751 Star
3641 3203 Star
3731 3248 Star
3809 3133 Star
3880 3287 Star
4344 3220 Star
4615 3266 Star
4808 3294 Star
4957 3406 Star
5079 3371 Star
5182 3427 Star
5272 3322 Star
5350 3360 Star
5421 3133 Star
5885 1229 Star
6156 1099 Star
6349 1498 Star
6498 1460 Star
6620 1292 Star
6723 1439 Star
6813 1232 Star
6891 1351 Star
6594 4347 Star
1.000 UP
7.000 UL
LT0
6311 4207 M
(No Psyco & compression \(LZO\)) Rshow
6395 4207 M
399 0 V
798 858 M
464 262 V
271 175 V
193 123 V
149 168 V
122 66 V
103 56 V
90 112 V
78 32 V
71 -32 V
464 266 V
271 84 V
193 42 V
149 88 V
122 -39 V
103 119 V
90 -45 V
78 66 V
71 126 V
464 -45 V
271 28 V
193 87 V
149 -35 V
122 74 V
103 -172 V
90 179 V
78 -32 V
71 -28 V
464 14 V
271 -35 V
193 14 V
149 35 V
122 -10 V
103 14 V
90 -7 V
78 -4 V
798 858 Pls
1262 1120 Pls
1533 1295 Pls
1726 1418 Pls
1875 1586 Pls
1997 1652 Pls
2100 1708 Pls
2190 1820 Pls
2268 1852 Pls
2339 1820 Pls
2803 2086 Pls
3074 2170 Pls
3267 2212 Pls
3416 2300 Pls
3538 2261 Pls
3641 2380 Pls
3731 2335 Pls
3809 2401 Pls
3880 2527 Pls
4344 2482 Pls
4615 2510 Pls
4808 2597 Pls
4957 2562 Pls
5079 2636 Pls
5182 2464 Pls
5272 2643 Pls
5350 2611 Pls
5421 2583 Pls
5885 2597 Pls
6156 2562 Pls
6349 2576 Pls
6498 2611 Pls
6620 2601 Pls
6723 2615 Pls
6813 2608 Pls
6891 2604 Pls
6594 4207 Pls
1.000 UP
7.000 UL
LT3
6311 4067 M
(No Psyco & no compression) Rshow
6395 4067 M
399 0 V
798 858 M
464 262 V
271 175 V
193 200 V
149 91 V
122 66 V
103 -7 V
90 175 V
78 -31 V
71 31 V
464 228 V
271 91 V
193 122 V
149 18 V
122 -18 V
103 28 V
90 35 V
78 28 V
71 189 V
464 -77 V
271 119 V
193 -21 V
149 11 V
122 45 V
103 -66 V
90 28 V
78 0 V
71 35 V
5885 1523 L
271 -133 V
193 140 V
149 -25 V
122 -245 V
103 98 V
90 -164 V
78 115 V
798 858 Box
1262 1120 Box
1533 1295 Box
1726 1495 Box
1875 1586 Box
1997 1652 Box
2100 1645 Box
2190 1820 Box
2268 1789 Box
2339 1820 Box
2803 2048 Box
3074 2139 Box
3267 2261 Box
3416 2279 Box
3538 2261 Box
3641 2289 Box
3731 2324 Box
3809 2352 Box
3880 2541 Box
4344 2464 Box
4615 2583 Box
4808 2562 Box
4957 2573 Box
5079 2618 Box
5182 2552 Box
5272 2580 Box
5350 2580 Box
5421 2615 Box
5885 1523 Box
6156 1390 Box
6349 1530 Box
6498 1505 Box
6620 1260 Box
6723 1358 Box
6813 1194 Box
6891 1309 Box
6594 4067 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
