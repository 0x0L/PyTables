%!PS-Adobe-2.0 EPSF-2.0
%%Title: read-small-lzo-zlib-ucl-comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Fri Jun 13 19:06:24 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
( 0) Rshow
798 1260 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 200) Rshow
798 2100 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 400) Rshow
798 2940 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 600) Rshow
798 3780 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 800) Rshow
798 4620 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1000) Rshow
798 420 M
0 63 V
0 4137 R
0 -63 V
798 280 M
( 1000) Cshow
1262 420 M
0 31 V
0 4169 R
0 -31 V
1875 420 M
0 31 V
0 4169 R
0 -31 V
2190 420 M
0 31 V
0 4169 R
0 -31 V
2339 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 10000) Cshow
2803 420 M
0 31 V
0 4169 R
0 -31 V
3416 420 M
0 31 V
0 4169 R
0 -31 V
3731 420 M
0 31 V
0 4169 R
0 -31 V
3880 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100000) Cshow
4344 420 M
0 31 V
0 4169 R
0 -31 V
4957 420 M
0 31 V
0 4169 R
0 -31 V
5272 420 M
0 31 V
0 4169 R
0 -31 V
5421 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
5885 420 M
0 31 V
0 4169 R
0 -31 V
6498 420 M
0 31 V
0 4169 R
0 -31 V
6813 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+07) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4200 V
-6164 0 V
798 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Krow/s\)) Cshow
grestore
3880 70 M
(Number of rows) Cshow
3880 4830 M
(Selecting with small record size \(16 bytes\)) Cshow
1.000 UP
7.000 UL
LT0
6311 4487 M
(No compression) Rshow
6395 4487 M
399 0 V
798 945 M
464 315 V
271 210 V
193 239 V
149 110 V
122 79 V
103 -8 V
90 210 V
78 -38 V
71 38 V
464 273 V
271 109 V
193 147 V
149 21 V
122 -21 V
103 34 V
90 42 V
78 33 V
71 227 V
464 -92 V
271 143 V
193 -26 V
149 13 V
122 55 V
103 -80 V
90 33 V
78 0 V
71 42 V
5885 1743 L
271 -160 V
193 168 V
149 -29 V
122 -294 V
103 118 V
90 -198 V
78 139 V
798 945 Pls
1262 1260 Pls
1533 1470 Pls
1726 1709 Pls
1875 1819 Pls
1997 1898 Pls
2100 1890 Pls
2190 2100 Pls
2268 2062 Pls
2339 2100 Pls
2803 2373 Pls
3074 2482 Pls
3267 2629 Pls
3416 2650 Pls
3538 2629 Pls
3641 2663 Pls
3731 2705 Pls
3809 2738 Pls
3880 2965 Pls
4344 2873 Pls
4615 3016 Pls
4808 2990 Pls
4957 3003 Pls
5079 3058 Pls
5182 2978 Pls
5272 3011 Pls
5350 3011 Pls
5421 3053 Pls
5885 1743 Pls
6156 1583 Pls
6349 1751 Pls
6498 1722 Pls
6620 1428 Pls
6723 1546 Pls
6813 1348 Pls
6891 1487 Pls
6594 4487 Pls
1.000 UP
7.000 UL
LT1
6311 4347 M
(ZLIB) Rshow
6395 4347 M
399 0 V
798 886 M
464 294 V
271 206 V
193 84 V
149 113 V
122 97 V
103 76 V
90 63 V
78 54 V
71 -54 V
464 184 V
271 139 V
193 -8 V
149 63 V
122 21 V
103 71 V
90 -25 V
78 54 V
71 42 V
464 93 V
271 21 V
193 -55 V
149 30 V
122 -84 V
103 92 V
90 17 V
78 -84 V
71 50 V
464 42 V
271 -122 V
193 55 V
149 38 V
122 -30 V
103 21 V
90 -4 V
78 0 V
798 886 Crs
1262 1180 Crs
1533 1386 Crs
1726 1470 Crs
1875 1583 Crs
1997 1680 Crs
2100 1756 Crs
2190 1819 Crs
2268 1873 Crs
2339 1819 Crs
2803 2003 Crs
3074 2142 Crs
3267 2134 Crs
3416 2197 Crs
3538 2218 Crs
3641 2289 Crs
3731 2264 Crs
3809 2318 Crs
3880 2360 Crs
4344 2453 Crs
4615 2474 Crs
4808 2419 Crs
4957 2449 Crs
5079 2365 Crs
5182 2457 Crs
5272 2474 Crs
5350 2390 Crs
5421 2440 Crs
5885 2482 Crs
6156 2360 Crs
6349 2415 Crs
6498 2453 Crs
6620 2423 Crs
6723 2444 Crs
6813 2440 Crs
6891 2440 Crs
6594 4347 Crs
1.000 UP
7.000 UL
LT2
6311 4207 M
(LZO) Rshow
6395 4207 M
399 0 V
798 945 M
464 315 V
271 210 V
193 147 V
149 202 V
122 79 V
103 68 V
90 134 V
78 38 V
71 -38 V
464 319 V
271 101 V
193 50 V
149 105 V
122 -46 V
103 143 V
90 -55 V
78 80 V
71 151 V
464 -54 V
271 33 V
193 105 V
149 -42 V
122 89 V
103 -206 V
90 214 V
78 -38 V
71 -33 V
464 16 V
271 -42 V
193 17 V
149 42 V
122 -12 V
103 16 V
90 -8 V
78 -4 V
798 945 Star
1262 1260 Star
1533 1470 Star
1726 1617 Star
1875 1819 Star
1997 1898 Star
2100 1966 Star
2190 2100 Star
2268 2138 Star
2339 2100 Star
2803 2419 Star
3074 2520 Star
3267 2570 Star
3416 2675 Star
3538 2629 Star
3641 2772 Star
3731 2717 Star
3809 2797 Star
3880 2948 Star
4344 2894 Star
4615 2927 Star
4808 3032 Star
4957 2990 Star
5079 3079 Star
5182 2873 Star
5272 3087 Star
5350 3049 Star
5421 3016 Star
5885 3032 Star
6156 2990 Star
6349 3007 Star
6498 3049 Star
6620 3037 Star
6723 3053 Star
6813 3045 Star
6891 3041 Star
6594 4207 Star
1.000 UP
7.000 UL
LT3
6311 4067 M
(UCL) Rshow
6395 4067 M
399 0 V
798 945 M
464 315 V
271 210 V
193 147 V
149 113 V
122 168 V
103 68 V
90 50 V
78 46 V
71 38 V
464 227 V
271 92 V
193 72 V
149 8 V
122 109 V
103 -12 V
90 63 V
78 8 V
71 -50 V
464 -38 V
271 180 V
193 -12 V
149 38 V
122 -55 V
103 -8 V
90 58 V
78 -71 V
71 -25 V
464 113 V
271 -75 V
193 58 V
149 -58 V
122 16 V
103 13 V
90 -210 V
798 945 Box
1262 1260 Box
1533 1470 Box
1726 1617 Box
1875 1730 Box
1997 1898 Box
2100 1966 Box
2190 2016 Box
2268 2062 Box
2339 2100 Box
2803 2327 Box
3074 2419 Box
3267 2491 Box
3416 2499 Box
3538 2608 Box
3641 2596 Box
3731 2659 Box
3809 2667 Box
3880 2617 Box
4344 2579 Box
4615 2759 Box
4808 2747 Box
4957 2785 Box
5079 2730 Box
5182 2722 Box
5272 2780 Box
5350 2709 Box
5421 2684 Box
5885 2797 Box
6156 2722 Box
6349 2780 Box
6498 2722 Box
6620 2738 Box
6723 2751 Box
6813 2541 Box
6594 4067 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
