%!PS-Adobe-2.0 EPSF-2.0
%%Title: write-medium-psyco-lzo-zlib-ucl-comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 28 12:08:45 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 0) Rshow
714 1120 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 50) Rshow
714 1820 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 100) Rshow
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 150) Rshow
714 3220 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 200) Rshow
714 3920 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 250) Rshow
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 300) Rshow
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 1000) Cshow
1184 420 M
0 31 V
0 4169 R
0 -31 V
1806 420 M
0 31 V
0 4169 R
0 -31 V
2125 420 M
0 31 V
0 4169 R
0 -31 V
2276 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 10000) Cshow
2746 420 M
0 31 V
0 4169 R
0 -31 V
3368 420 M
0 31 V
0 4169 R
0 -31 V
3687 420 M
0 31 V
0 4169 R
0 -31 V
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100000) Cshow
4308 420 M
0 31 V
0 4169 R
0 -31 V
4930 420 M
0 31 V
0 4169 R
0 -31 V
5249 420 M
0 31 V
0 4169 R
0 -31 V
5400 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
5870 420 M
0 31 V
0 4169 R
0 -31 V
6492 420 M
0 31 V
0 4169 R
0 -31 V
6811 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+07) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Krow/s\)) Cshow
grestore
3838 70 M
(Number of rows) Cshow
3838 4830 M
(Writing with medium record size \(56 bytes\)) Cshow
1.000 UP
7.000 UL
LT0
6311 4487 M
(Psyco & No compression) Rshow
6395 4487 M
399 0 V
714 868 M
470 504 V
275 238 V
195 168 V
152 154 V
123 126 V
105 70 V
91 98 V
80 42 V
71 84 V
470 700 V
275 126 V
195 140 V
152 -42 V
123 70 V
105 42 V
91 -42 V
80 42 V
71 -84 V
470 112 V
275 84 V
195 210 V
152 -112 V
123 42 V
105 42 V
91 -14 V
80 -84 V
71 56 V
470 56 V
275 -644 V
195 -168 V
152 -126 V
123 -56 V
105 -56 V
91 56 V
80 -126 V
714 868 Pls
1184 1372 Pls
1459 1610 Pls
1654 1778 Pls
1806 1932 Pls
1929 2058 Pls
2034 2128 Pls
2125 2226 Pls
2205 2268 Pls
2276 2352 Pls
2746 3052 Pls
3021 3178 Pls
3216 3318 Pls
3368 3276 Pls
3491 3346 Pls
3596 3388 Pls
3687 3346 Pls
3767 3388 Pls
3838 3304 Pls
4308 3416 Pls
4583 3500 Pls
4778 3710 Pls
4930 3598 Pls
5053 3640 Pls
5158 3682 Pls
5249 3668 Pls
5329 3584 Pls
5400 3640 Pls
5870 3696 Pls
6145 3052 Pls
6340 2884 Pls
6492 2758 Pls
6615 2702 Pls
6720 2646 Pls
6811 2702 Pls
6891 2576 Pls
6594 4487 Pls
1.000 UP
7.000 UL
LT1
6311 4347 M
(Psyco & ZLIB) Rshow
6395 4347 M
399 0 V
714 840 M
470 420 V
275 182 V
195 112 V
152 112 V
123 84 V
105 42 V
91 56 V
80 42 V
71 42 V
470 378 V
275 42 V
195 14 V
152 42 V
123 28 V
105 -14 V
91 -14 V
80 -14 V
71 28 V
470 28 V
275 0 V
195 14 V
152 14 V
123 -28 V
105 28 V
91 -14 V
80 14 V
71 -28 V
470 0 V
275 -14 V
195 14 V
152 -14 V
123 -56 V
105 56 V
91 42 V
80 0 V
714 840 Crs
1184 1260 Crs
1459 1442 Crs
1654 1554 Crs
1806 1666 Crs
1929 1750 Crs
2034 1792 Crs
2125 1848 Crs
2205 1890 Crs
2276 1932 Crs
2746 2310 Crs
3021 2352 Crs
3216 2366 Crs
3368 2408 Crs
3491 2436 Crs
3596 2422 Crs
3687 2408 Crs
3767 2394 Crs
3838 2422 Crs
4308 2450 Crs
4583 2450 Crs
4778 2464 Crs
4930 2478 Crs
5053 2450 Crs
5158 2478 Crs
5249 2464 Crs
5329 2478 Crs
5400 2450 Crs
5870 2450 Crs
6145 2436 Crs
6340 2450 Crs
6492 2436 Crs
6615 2380 Crs
6720 2436 Crs
6811 2478 Crs
6891 2478 Crs
6594 4347 Crs
1.000 UP
7.000 UL
LT2
6311 4207 M
(Psyco & LZO) Rshow
6395 4207 M
399 0 V
714 868 M
470 504 V
275 210 V
195 196 V
152 126 V
123 126 V
105 70 V
91 70 V
80 42 V
71 42 V
470 630 V
275 154 V
195 -336 V
152 -714 V
123 1176 V
105 42 V
91 -28 V
80 14 V
71 28 V
470 70 V
275 14 V
195 126 V
152 0 V
123 -14 V
105 28 V
91 -14 V
80 14 V
71 -434 V
470 462 V
275 14 V
195 56 V
152 -42 V
123 -210 V
105 210 V
91 -294 V
80 28 V
714 868 Star
1184 1372 Star
1459 1582 Star
1654 1778 Star
1806 1904 Star
1929 2030 Star
2034 2100 Star
2125 2170 Star
2205 2212 Star
2276 2254 Star
2746 2884 Star
3021 3038 Star
3216 2702 Star
3368 1988 Star
3491 3164 Star
3596 3206 Star
3687 3178 Star
3767 3192 Star
3838 3220 Star
4308 3290 Star
4583 3304 Star
4778 3430 Star
4930 3430 Star
5053 3416 Star
5158 3444 Star
5249 3430 Star
5329 3444 Star
5400 3010 Star
5870 3472 Star
6145 3486 Star
6340 3542 Star
6492 3500 Star
6615 3290 Star
6720 3500 Star
6811 3206 Star
6891 3234 Star
6594 4207 Star
1.000 UP
7.000 UL
LT3
6311 4067 M
(Psyco & UCL) Rshow
6395 4067 M
399 0 V
714 756 M
470 224 V
275 70 V
195 42 V
152 42 V
123 28 V
105 14 V
91 14 V
80 14 V
71 0 V
470 112 V
275 0 V
195 14 V
152 0 V
123 14 V
105 -14 V
91 0 V
80 14 V
71 0 V
470 0 V
275 14 V
195 14 V
152 0 V
123 0 V
105 0 V
91 0 V
80 0 V
71 -14 V
470 -14 V
275 0 V
195 14 V
152 -14 V
123 -70 V
105 0 V
91 56 V
80 0 V
714 756 Box
1184 980 Box
1459 1050 Box
1654 1092 Box
1806 1134 Box
1929 1162 Box
2034 1176 Box
2125 1190 Box
2205 1204 Box
2276 1204 Box
2746 1316 Box
3021 1316 Box
3216 1330 Box
3368 1330 Box
3491 1344 Box
3596 1330 Box
3687 1330 Box
3767 1344 Box
3838 1344 Box
4308 1344 Box
4583 1358 Box
4778 1372 Box
4930 1372 Box
5053 1372 Box
5158 1372 Box
5249 1372 Box
5329 1372 Box
5400 1358 Box
5870 1344 Box
6145 1344 Box
6340 1358 Box
6492 1344 Box
6615 1274 Box
6720 1274 Box
6811 1330 Box
6891 1330 Box
6594 4067 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
