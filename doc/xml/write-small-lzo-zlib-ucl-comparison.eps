%!PS-Adobe-2.0 EPSF-2.0
%%Title: write-small-lzo-zlib-ucl-comparison.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Fri Jun 13 19:06:24 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
( 0) Rshow
714 840 M
63 0 V
6185 0 R
-63 0 V
630 840 M
( 50) Rshow
714 1260 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 100) Rshow
714 1680 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 150) Rshow
714 2100 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 200) Rshow
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 250) Rshow
714 2940 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 300) Rshow
714 3360 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 350) Rshow
714 3780 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 400) Rshow
714 4200 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 450) Rshow
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 500) Rshow
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
( 1000) Cshow
1184 420 M
0 31 V
0 4169 R
0 -31 V
1806 420 M
0 31 V
0 4169 R
0 -31 V
2125 420 M
0 31 V
0 4169 R
0 -31 V
2276 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 10000) Cshow
2746 420 M
0 31 V
0 4169 R
0 -31 V
3368 420 M
0 31 V
0 4169 R
0 -31 V
3687 420 M
0 31 V
0 4169 R
0 -31 V
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 100000) Cshow
4308 420 M
0 31 V
0 4169 R
0 -31 V
4930 420 M
0 31 V
0 4169 R
0 -31 V
5249 420 M
0 31 V
0 4169 R
0 -31 V
5400 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
5870 420 M
0 31 V
0 4169 R
0 -31 V
6492 420 M
0 31 V
0 4169 R
0 -31 V
6811 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+07) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Krow/s\)) Cshow
grestore
3838 70 M
(Number of rows) Cshow
3838 4830 M
(Writing with small record size \(16 bytes\)) Cshow
1.000 UP
7.000 UL
LT0
6311 4487 M
(No compression) Rshow
6395 4487 M
399 0 V
714 1176 M
470 437 V
275 67 V
195 193 V
152 101 V
123 176 V
105 101 V
91 143 V
80 67 V
71 59 V
470 260 V
275 110 V
195 193 V
152 25 V
123 59 V
105 50 V
91 -109 V
80 -42 V
71 0 V
470 277 V
275 17 V
195 8 V
152 0 V
123 9 V
105 42 V
91 -42 V
80 42 V
71 -101 V
5870 1982 L
275 387 V
195 -210 V
152 -101 V
123 378 V
105 -235 V
91 -202 V
80 101 V
714 1176 Pls
1184 1613 Pls
1459 1680 Pls
1654 1873 Pls
1806 1974 Pls
1929 2150 Pls
2034 2251 Pls
2125 2394 Pls
2205 2461 Pls
2276 2520 Pls
2746 2780 Pls
3021 2890 Pls
3216 3083 Pls
3368 3108 Pls
3491 3167 Pls
3596 3217 Pls
3687 3108 Pls
3767 3066 Pls
3838 3066 Pls
4308 3343 Pls
4583 3360 Pls
4778 3368 Pls
4930 3368 Pls
5053 3377 Pls
5158 3419 Pls
5249 3377 Pls
5329 3419 Pls
5400 3318 Pls
5870 1982 Pls
6145 2369 Pls
6340 2159 Pls
6492 2058 Pls
6615 2436 Pls
6720 2201 Pls
6811 1999 Pls
6891 2100 Pls
6594 4487 Pls
1.000 UP
7.000 UL
LT1
6311 4347 M
(ZLIB) Rshow
6395 4347 M
399 0 V
714 1058 M
470 345 V
275 67 V
195 193 V
152 109 V
123 84 V
105 68 V
91 92 V
80 42 V
71 42 V
470 244 V
275 42 V
195 67 V
152 -25 V
123 58 V
105 9 V
91 -59 V
80 101 V
71 17 V
470 -34 V
275 0 V
195 50 V
152 34 V
123 -17 V
105 0 V
91 0 V
80 34 V
71 -25 V
470 0 V
275 -42 V
195 25 V
152 59 V
123 -42 V
105 58 V
91 -33 V
80 -9 V
714 1058 Crs
1184 1403 Crs
1459 1470 Crs
1654 1663 Crs
1806 1772 Crs
1929 1856 Crs
2034 1924 Crs
2125 2016 Crs
2205 2058 Crs
2276 2100 Crs
2746 2344 Crs
3021 2386 Crs
3216 2453 Crs
3368 2428 Crs
3491 2486 Crs
3596 2495 Crs
3687 2436 Crs
3767 2537 Crs
3838 2554 Crs
4308 2520 Crs
4583 2520 Crs
4778 2570 Crs
4930 2604 Crs
5053 2587 Crs
5158 2587 Crs
5249 2587 Crs
5329 2621 Crs
5400 2596 Crs
5870 2596 Crs
6145 2554 Crs
6340 2579 Crs
6492 2638 Crs
6615 2596 Crs
6720 2654 Crs
6811 2621 Crs
6891 2612 Crs
6594 4347 Crs
1.000 UP
7.000 UL
LT2
6311 4207 M
(LZO) Rshow
6395 4207 M
399 0 V
714 1117 M
470 420 V
275 143 V
195 193 V
152 101 V
123 176 V
105 160 V
91 84 V
80 126 V
71 -59 V
470 429 V
275 50 V
195 118 V
152 -93 V
123 25 V
105 252 V
91 17 V
80 51 V
71 -160 V
470 210 V
275 8 V
195 76 V
152 -84 V
123 -67 V
105 42 V
91 59 V
80 8 V
71 -143 V
470 235 V
275 -33 V
195 0 V
152 -42 V
123 -17 V
105 -17 V
91 42 V
80 0 V
714 1117 Star
1184 1537 Star
1459 1680 Star
1654 1873 Star
1806 1974 Star
1929 2150 Star
2034 2310 Star
2125 2394 Star
2205 2520 Star
2276 2461 Star
2746 2890 Star
3021 2940 Star
3216 3058 Star
3368 2965 Star
3491 2990 Star
3596 3242 Star
3687 3259 Star
3767 3310 Star
3838 3150 Star
4308 3360 Star
4583 3368 Star
4778 3444 Star
4930 3360 Star
5053 3293 Star
5158 3335 Star
5249 3394 Star
5329 3402 Star
5400 3259 Star
5870 3494 Star
6145 3461 Star
6340 3461 Star
6492 3419 Star
6615 3402 Star
6720 3385 Star
6811 3427 Star
6891 3427 Star
6594 4207 Star
1.000 UP
7.000 UL
LT3
6311 4067 M
(UCL) Rshow
6395 4067 M
399 0 V
714 882 M
470 134 V
275 34 V
195 50 V
152 26 V
123 16 V
105 51 V
91 8 V
80 9 V
71 8 V
470 59 V
275 0 V
195 8 V
152 17 V
123 -17 V
105 -8 V
91 17 V
80 8 V
71 -8 V
470 16 V
275 -8 V
195 8 V
152 9 V
123 -9 V
105 0 V
91 9 V
80 0 V
71 -17 V
470 0 V
275 17 V
195 -9 V
152 9 V
123 -9 V
105 0 V
91 17 V
80 -17 V
714 882 Box
1184 1016 Box
1459 1050 Box
1654 1100 Box
1806 1126 Box
1929 1142 Box
2034 1193 Box
2125 1201 Box
2205 1210 Box
2276 1218 Box
2746 1277 Box
3021 1277 Box
3216 1285 Box
3368 1302 Box
3491 1285 Box
3596 1277 Box
3687 1294 Box
3767 1302 Box
3838 1294 Box
4308 1310 Box
4583 1302 Box
4778 1310 Box
4930 1319 Box
5053 1310 Box
5158 1310 Box
5249 1319 Box
5329 1319 Box
5400 1302 Box
5870 1302 Box
6145 1319 Box
6340 1310 Box
6492 1319 Box
6615 1310 Box
6720 1310 Box
6811 1327 Box
6891 1310 Box
6594 4067 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
